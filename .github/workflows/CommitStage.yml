# Commit Stage Workflow
#
# - **Triggers:** Executes on push and pull request events for the main branch.
# - **Environment:** Utilizes `macos-latest` for running tasks, ensuring compatibility with macOS.
# - **Key Tasks:**
#   - **Checkout:** Fetches the latest code from the repository.
#   - **Setup Node.js:** Installs Node.js version 20 for consistency in running Node applications.
#   - **Dependency Installation:** Uses `npm ci` to install project dependencies.
#   - **Code Compilation:** Compiles TypeScript code using `tsc`.
#   - **Testing:** Executes all tests located in the `./tests` directory to verify code functionality.
#   - **Linting:** Runs ESLint to enforce code style and catch potential issues.
#   - **Build:** Builds the project using `npm run build`.
#   - **Artifact Upload:** Uploads the generated `.dmg` file as an artifact, with a retention period of 5 days.
#
# - **Commit Stage Badge:** Generates a visual status badge indicating the success or failure of the commit stage,
#   using green for success and red for failure. The badge is updated based on the outcome of the commit jobs.
#
# This workflow ensures that every commit meets quality standards before it is integrated into the main branch,
# thus maintaining code reliability and readiness for deployment.

name: Commit Stage

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions: write-all

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  commit:
    name: Commit Stage
    runs-on: macos-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Dependencies
        run: npm ci

      - name: Compile Code
        run: npx tsc

      - name: Run Unit Tests
        run: npm run test:unit

      - name: Run Narrow Integration Tests
        run: npm run test:integration

      - name: Run Component Tests
        run: npm run test:component

      - name: Run Contract Provider Verification Tests
        run: npm run test:contract

      - name: Run ESLint
        run: npm run lint

      - name: Build
        run: npm run build

      - name: Upload artifact
        if: ${{ !contains(github.event_name, 'pull_request') }}
        uses: actions/upload-artifact@v4
        with:
          retention-days: 5
          name: MongoDB Query Executor
          path: ./release/**/*.dmg

      - name: Trigger Acceptance Stage
        if: ${{ !contains(github.event_name, 'pull_request') }}
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.PAT }}
          repository: ${{github.repository_owner}}/electron-app-tests
          event-type: fresh-artifact
          client-payload: '{"run_id": ${{ github.run_id }}}'

  commit_stage_badge:
    name: Commit badge
    if: ${{ always() }}
    needs: [commit]
    uses: ./.github/workflows/badge.yml
    with:
      stage_label: commit_stage
      stage_name: "Commit Stage"
      passed: ${{ contains(needs.*.result, 'success') }}
    secrets: inherit
