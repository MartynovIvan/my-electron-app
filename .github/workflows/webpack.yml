name: NodeJS with Webpack

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions: write-all

jobs:

  build_NIGHTLY:

    strategy:
      matrix:
        os:
          [
            { name: 'linux', image: 'ubuntu-latest' },
          ]
    runs-on: ${{ matrix.os.image }}
    steps:
      - name: Github checkout
        uses: actions/checkout@v4

      - name: Use Node.js with GitHub Packages Auth
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: 'https://npm.pkg.github.com/'
          scope: '@vaisakhsasikumar'

      - name: Update package.json version
        run: |
          node -e "const fs = require('fs'); const pkg = require('./package.json'); pkg.version = '1.0.0+' + new Date().toISOString().split('T')[0]; fs.writeFileSync('./package.json', JSON.stringify(pkg, null, 2) + '\n');"

      - run: npm ci

      - name: Publish app
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  eslint:
    name: Run ESLint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x" # Use a single Node.js version for consistency

      - name: Install Dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint
        continue-on-error: true # Ensure the job continues even if ESLint finds errors

  build:
    name: Build on ${{ matrix.os }} with Node.js ${{ matrix.node-version }}
    runs-on: ${{ matrix.os }}
    needs: eslint
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
        node-version: ["20.x"]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Test
        run: npm test --timeout=15000